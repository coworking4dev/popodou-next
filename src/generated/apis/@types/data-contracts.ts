/**
 * !DO NOT EDIT THIS FILE
 *
 * 스크립트가 실행될때, 파일을 항상 새로 쓰기 때문에 파일 수정시 작성내용이 제거 될 수 있습니다.
 */

export interface ErrorResponseDTOCommonType {
  /**
   * 에러 코드
   * @example "ERROR_CODE"
   */
  errorCode?: string
  /**
   * 에러 메시지
   * @example "에러 이유"
   */
  message?: string
}

/**
 * 주소 정보 전부 없을 시 해당 객체 null 요청
 */

export type AddressInfoType = {
  country?: string | null
  city?: string | null
  address?: string | null
  zipcode?: string | null
}

/**
 * sns 플랫폼 설정하지 않을 시 해당 객체 null 요청
 */

export type SnsInfoType = {
  platform?: SnsInfoPlatformEnumType
  snsId?: string
  /** platform이 others인 경우 sns 풀랫폼 명 */
  otherPlatformName?: string | null
}

export interface UpdateMyPageUserInfoRequestType {
  /** 이름 */
  firstName: string
  lastName: string
  /** @format date */
  birthDate: string
  phoneCountryCode: string
  phoneNumber: string
  nickname: string
  gender?: UpdateMyPageUserInfoRequestGenderEnumType
  isReceiveSeedingBox: boolean
  /** 주소 정보 전부 없을 시 해당 객체 null 요청 */
  addressInfo?: AddressInfoType
  /** sns 플랫폼 설정하지 않을 시 해당 객체 null 요청 */
  snsInfo?: SnsInfoType
}

/**
 * 데이터
 */

export interface MyPageUserInfoType {
  /** @format int64 */
  userId: number
  /** Null 인 경우 로컬 유저 */
  provider: MyPageUserInfoProviderEnumType | null
  /** 이름 */
  firstName: string
  lastName: string
  /** @format date */
  birthDate: string
  email: string
  phoneCountryCode: string
  phoneNumber: string
  nickname: string
  gender?: MyPageUserInfoGenderEnumType
  isReceiveSeedingBox: boolean
  /** 주소 정보 전부 없을 시 해당 객체 null 요청 */
  addressInfo?: AddressInfoType
  /** sns 플랫폼 설정하지 않을 시 해당 객체 null 요청 */
  snsInfo?: SnsInfoType
}

export interface ResponseDTOMyPageUserInfoType {
  /**
   * HttpStatusCode
   * @format int32
   * @example 200
   */
  statusCode?: number
  /**
   * 응답 메시지
   * @example "성공"
   */
  message?: string
  /** 데이터 */
  data?: MyPageUserInfoType
}

export interface VerifyPasswordRequestDtoType {
  /** 비밀번호 */
  password: string
}

export interface ResponseDTOVoidType {
  /**
   * HttpStatusCode
   * @format int32
   * @example 200
   */
  statusCode?: number
  /**
   * 응답 메시지
   * @example "성공"
   */
  message?: string
  /** 데이터 */
  data?: object
}

export interface VerifyEmailRequestType {
  email: string
}

export interface ResponseDTOVerifyEmailResponseType {
  /**
   * HttpStatusCode
   * @format int32
   * @example 200
   */
  statusCode?: number
  /**
   * 응답 메시지
   * @example "성공"
   */
  message?: string
  /** 데이터 */
  data?: VerifyEmailResponseType
}

/**
 * 데이터
 */

export interface VerifyEmailResponseType {
  email: string
}

export interface VerifyEmailConfirmRequestType {
  /** 이메일 */
  email: string
  /** 이메일 인증 코드 */
  code: string
  purpose: VerifyEmailConfirmRequestPurposeEnumType
}

export interface ResponseDTOVerifyEmailConfirmResponseType {
  /**
   * HttpStatusCode
   * @format int32
   * @example 200
   */
  statusCode?: number
  /**
   * 응답 메시지
   * @example "성공"
   */
  message?: string
  /** 데이터 */
  data?: VerifyEmailConfirmResponseType
}

/**
 * 데이터
 */

export interface VerifyEmailConfirmResponseType {
  token?: string
}

export interface RegisterAdditionalInfoType {
  nickname: string
  gender?: RegisterAdditionalInfoGenderEnumType | null
  isReceiveSeedingBox: boolean
  /** 주소 정보 전부 없을 시 해당 객체 null 요청 */
  addressInfo?: AddressInfoType
  /** sns 플랫폼 설정하지 않을 시 해당 객체 null 요청 */
  snsInfo?: SnsInfoType
}

export interface RegisterUserRequestDtoType {
  /** 이름 */
  firstName: string
  lastName: string
  /** @format date */
  birthDate: string
  email: string
  /** email verifier를 통해 얻은 token값 입니다. */
  emailToken: string
  password: string
  passwordConfirm: string
  phoneCountryCode: string
  phoneNumber: string
  isTermsAgreed: boolean
  isPrivacyAgreed: boolean
  additionalInfo?: RegisterAdditionalInfoType
}

/**
 * 데이터
 */

export interface RegisterUserResponseDtoType {
  /** @format int64 */
  userId?: number
  username?: string
}

export interface ResponseDTORegisterUserResponseDtoType {
  /**
   * HttpStatusCode
   * @format int32
   * @example 200
   */
  statusCode?: number
  /**
   * 응답 메시지
   * @example "성공"
   */
  message?: string
  /** 데이터 */
  data?: RegisterUserResponseDtoType
}

export interface OauthRegisterAdditionalInfoType {
  firstName: string
  lastName: string
  /** @format date */
  birthDate: string
  nickname: string
  gender?: OauthRegisterAdditionalInfoGenderEnumType | null
  phoneCountryCode: string
  phoneNumber: string
  isReceiveSeedingBox: boolean
  /** 주소 정보 전부 없을 시 해당 객체 null 요청 */
  addressInfo?: AddressInfoType
  /** sns 플랫폼 설정하지 않을 시 해당 객체 null 요청 */
  snsInfo?: SnsInfoType
  isTermsAgreed: boolean
  isPrivacyAgreed: boolean
}

export interface RegisterSocialUserRequestDtoType {
  uuid: string
  additionalInfo: OauthRegisterAdditionalInfoType
}

export interface UserRefreshRequestDtoType {
  refreshToken?: string
}

export interface ResponseDTOUserRefreshResponseDtoType {
  /**
   * HttpStatusCode
   * @format int32
   * @example 200
   */
  statusCode?: number
  /**
   * 응답 메시지
   * @example "성공"
   */
  message?: string
  /** 데이터 */
  data?: UserRefreshResponseDtoType
}

/**
 * 데이터
 */

export interface UserRefreshResponseDtoType {
  accessToken?: string
  refreshToken?: string
}

export interface PasswordResetConfirmRequestType {
  /** 비밀번호 */
  password: string
  /** 비밀번호 확인 */
  passwordConfirm: string
  token: string
}

export interface PasswordChangeRequestDtoType {
  /** 기존 비밀번호 */
  currentPassword: string
  /** 새로운 비밀번호 */
  password: string
  /** 새로운 비밀번호 확인 */
  passwordConfirm: string
}

export interface ResponseDTOStringType {
  /**
   * HttpStatusCode
   * @format int32
   * @example 200
   */
  statusCode?: number
  /**
   * 응답 메시지
   * @example "성공"
   */
  message?: string
  /** 데이터 */
  data?: string
}

export interface LoginRequestDtoType {
  /** 아이디 */
  email: string
  /** 비밀번호 */
  password: string
}

/**
 * 데이터
 */

export interface LoginResponseDtoType {
  accessToken?: string
  refreshToken?: string
}

export interface ResponseDTOLoginResponseDtoType {
  /**
   * HttpStatusCode
   * @format int32
   * @example 200
   */
  statusCode?: number
  /**
   * 응답 메시지
   * @example "성공"
   */
  message?: string
  /** 데이터 */
  data?: LoginResponseDtoType
}

export interface PresignedRequestDtoType {
  /**
   * 파일명
   * @minLength 1
   * @example "profile.jpg"
   */
  fileName: string
  /**
   * 파일 타입
   * @example "IMAGE"
   */
  fileType: PresignedRequestDtoFileTypeEnumType
  /**
   * 파일 경로
   * @example "USER_THUMBNAIL"
   */
  fieldChoices: PresignedRequestDtoFieldChoicesEnumType
}

/**
 * 데이터
 */

export interface PresignedResponseDtoType {
  /**
   * Presigned URL
   * @example "https://example-bucket.s3.amazonaws.com/presigned-url"
   */
  url?: string
  /**
   * 추가 필드 정보
   * @example {"field1":"value1","field2":"value2"}
   */
  fields?: Record<string, string>
}

export interface ResponseDTOPresignedResponseDtoType {
  /**
   * HttpStatusCode
   * @format int32
   * @example 200
   */
  statusCode?: number
  /**
   * 응답 메시지
   * @example "성공"
   */
  message?: string
  /** 데이터 */
  data?: PresignedResponseDtoType
}

export interface AddPopupCommentRequestType {
  comment: string
}

export interface AddCommentRequestType {
  comment: string
}

export interface AddInquiryRequestDtoType {
  /** 문의 유형 */
  type: AddInquiryRequestDtoTypeEnumType
  /**
   * 제목
   * @maxLength 50
   */
  title: string
  /**
   * 문의 내용
   * @maxLength 1000
   */
  content: string
}

export interface AddCommunityPostsRequestDtoType {
  /** 콘텐츠 */
  content: string
  /**
   * 이미지 주소 / 최대 10개
   * @maxItems 10
   * @minItems 0
   */
  imagePaths?: string[]
}

export interface AddPostCommentsRequestDtoType {
  /**
   * 댓글 내용
   * @minLength 1
   * @maxLength 2147483647
   * @example "댓글입니다."
   */
  comment: string
}

export interface ReportCommunityPostRequestDtoType {
  /**
   * 게시물 아이디
   * @format int64
   */
  postId: number
  /**
   * 이유
   * @maxLength 500
   * @example "이유입니다."
   */
  reason: string
}

/**
 * 카테고리
 */

export interface CategoryInfoType {
  /** @format int64 */
  categoryId: number
  categoryName: string
  color: CategoryInfoColorEnumType
}

/**
 * 데이터
 */

export interface CursorPopupResponseDtoType {
  /** cursor / 다음 요청의 cursor */
  cursor: string | null
  /** 다음 데이터 존재 여부 */
  hasNext: boolean
  data?: PopupResponseDtoType[]
  /** @format int64 */
  totalElements?: number
}

/**
 * 메인 이미지
 */

export interface ImageInfoType {
  url?: string
  path?: string
}

export interface PopupResponseDtoType {
  /**
   * 팝업 아이디
   * @format int64
   */
  popupId: number
  /** 팝업명 */
  title: string
  /** 팝업 소개 문구 */
  description?: string
  /** 메인 이미지 */
  thumbnail: ImageInfoType
  /**
   * 시작 날짜
   * @format date
   */
  startDate: string
  /**
   * 종료 날짜
   * @format date
   */
  endDate: string
  /** 도시 */
  city: string
  /** 국가 */
  country: string
  /** 카테고리 */
  category: CategoryInfoType
  /**
   * 유저 찜 여부 / 비로그인 유저의 경우 false
   * @default false
   */
  isLike: boolean
  status: GetPopupListParamsStatusEnumType
}

export interface ResponseDTOCursorPopupResponseDtoType {
  /**
   * HttpStatusCode
   * @format int32
   * @example 200
   */
  statusCode?: number
  /**
   * 응답 메시지
   * @example "성공"
   */
  message?: string
  /** 데이터 */
  data?: CursorPopupResponseDtoType
}

/**
 * 데이터
 */

export interface GetPopupResponseDtoType {
  /**
   * 팝업 아이디
   * @format int64
   */
  popupId: number
  /** 팝업명 */
  title: string
  /** 팝업 소개 문구 */
  description?: string
  /** 메인 이미지 */
  mainImage: ImageInfoType
  /** 카테고리 */
  category: CategoryInfoType
  /**
   * 시작 날짜
   * @format date
   */
  startDate: string
  /**
   * 종료 날짜
   * @format date
   */
  endDate: string
  /** 종료 시간 */
  openTime: string
  /** 종료 시간 */
  closeTime: string
  /** 우편코드 */
  postalCode: string
  /** 도시 */
  city: string
  /** 국가 */
  country: string
  /** 상세 주소 */
  addressLine: string
  /** 팝업 디테일 페이지 */
  detailPage: string
  /** 프로그램 옵션 */
  optionsList?: GetReservationOptionsType[]
  /**
   * 유저 찜 여부 / 비로그인 유저의 경우 false
   * @default false
   */
  isLike: boolean
  /**
   * 조회수
   * @format int64
   */
  viewCount: number

  status: GetPopupListParamsStatusEnumType
}

/**
 * 프로그램 옵션
 */

export interface GetReservationOptionsType {
  /**
   * 프로그램 아이디
   * @format int64
   */
  optionId: number
  /** 프로그램명 */
  optionName: string
  /**
   * 프로그램 가격
   * @format double
   */
  price: number | null
}

/**
 * 종료 시간
 */

export interface LocalTimeType {
  /** @format int32 */
  hour?: number
  /** @format int32 */
  minute?: number
  /** @format int32 */
  second?: number
  /** @format int32 */
  nano?: number
}

export interface ResponseDTOGetPopupResponseDtoType {
  /**
   * HttpStatusCode
   * @format int32
   * @example 200
   */
  statusCode?: number
  /**
   * 응답 메시지
   * @example "성공"
   */
  message?: string
  /** 데이터 */
  data?: GetPopupResponseDtoType
}

/**
 * 데이터
 */

export interface PageResponseDTOPopupCommentInfoType {
  content?: PopupCommentInfoType[]
  /** @format int32 */
  page?: number
  /** @format int32 */
  size?: number
  /** @format int64 */
  totalElements?: number
  /** @format int64 */
  totalPages?: number
}

export interface PopupCommentInfoType {
  /** @format int64 */
  commentId: number
  /** @format int64 */
  userId: number
  nickname: string
  comment: string
  /** @format date-time */
  createdAt: string
  isMine: boolean
}

export interface ResponseDTOPageResponseDTOPopupCommentInfoType {
  /**
   * HttpStatusCode
   * @format int32
   * @example 200
   */
  statusCode?: number
  /**
   * 응답 메시지
   * @example "성공"
   */
  message?: string
  /** 데이터 */
  data?: PageResponseDTOPopupCommentInfoType
}

/**
 * 데이터
 */

export interface CursorGetAllPlaceResponseDtoType {
  /** cursor / 다음 요청의 cursor */
  cursor: string | null
  /** 다음 데이터 존재 여부 */
  hasNext: boolean
  data?: GetAllPlaceResponseDtoType[]
  /** @format int64 */
  totalElements?: number
}

export interface GetAllPlaceResponseDtoType {
  /**
   * 공간 아이디
   * @format int64
   */
  placeId: number
  /** 공간명 */
  title: string
  /** 공간 소개 */
  subTitle?: string
  /** 메인 이미지 */
  thumbnail: ImageInfoType
  /** 도시 */
  city: string
  /** 국가 */
  country: string
  /**
   * 카테고리 ID
   * @format int64
   */
  category: CategoryInfoType
}

export interface ResponseDTOCursorGetAllPlaceResponseDtoType {
  /**
   * HttpStatusCode
   * @format int32
   * @example 200
   */
  statusCode?: number
  /**
   * 응답 메시지
   * @example "성공"
   */
  message?: string
  /** 데이터 */
  data?: CursorGetAllPlaceResponseDtoType
}

/**
 * 데이터
 */

export interface GetPlaceResponseDtoType {
  /**
   * 공간 아이디
   * @format int64
   */
  placeId: number
  /** 공간명 */
  title: string
  /** 공간 설명 */
  subTitle?: string
  /** 메인 이미지 */
  mainImage: ImageInfoType
  /**
   * 카테고리 아이디
   * @format int64
   */
  categoryId: number
  /** 카테고리 이름 */
  categoryName: string
  /** 우편코드 */
  postalCode: string
  /** 도시 */
  city: string
  /** 국가 */
  country: string
  /** 상세 주소 */
  addressLine: string
  /** 상세 설명 */
  detailPage: string
  /** 사진 리스트 */
  photos: ImageInfoType[]
  /** 부스 사진 리스트 */
  booths: ImageInfoType[]
}

export interface ResponseDTOGetPlaceResponseDtoType {
  /**
   * HttpStatusCode
   * @format int32
   * @example 200
   */
  statusCode?: number
  /**
   * 응답 메시지
   * @example "성공"
   */
  message?: string
  /** 데이터 */
  data?: GetPlaceResponseDtoType
}

/**
 * 데이터
 */

export interface CursorMyPopupLikeResponseDtoType {
  /** cursor / 다음 요청의 cursor */
  cursor: string | null
  /** 다음 데이터 존재 여부 */
  hasNext: boolean
  data?: MyPopupLikeResponseDtoType[]
  /** @format int64 */
  totalElements?: number
}

export interface MyPopupLikeResponseDtoType {
  /**
   * 팝업 아이디
   * @format int64
   */
  popupId: number
  /** 메인 이미지 */
  thumbnail: ImageInfoType
  /** 제목 */
  title: string
  /**
   * 시작 날짜
   * @format date
   */
  startDate: string
  /**
   * 종료 날짜
   * @format date
   */
  endDate: string
  /** 도시 */
  city: string
  /** 나라 */
  country: string
  /** 찜하기 여부 */
  isLike: boolean
}

export interface ResponseDTOCursorMyPopupLikeResponseDtoType {
  /**
   * HttpStatusCode
   * @format int32
   * @example 200
   */
  statusCode?: number
  /**
   * 응답 메시지
   * @example "성공"
   */
  message?: string
  /** 데이터 */
  data?: CursorMyPopupLikeResponseDtoType
}

/**
 * 데이터
 */

export interface CursorMyCommunityPostResponseDtoType {
  /** cursor / 다음 요청의 cursor */
  cursor: string | null
  /** 다음 데이터 존재 여부 */
  hasNext: boolean
  data?: MyCommunityPostResponseDtoType[]
  /** @format int64 */
  totalElements?: number
}

export interface MyCommunityPostResponseDtoType {
  /**
   * 게시글 아이디
   * @format int64
   */
  postId: number
  /**
   * 작성자 아이디
   * @format int64
   */
  userId: number
  /** 작성자 닉네임 */
  nickname: string
  /** 글 내용 */
  content: string
  /** 이미지 */
  images?: ImageInfoType[]
  /**
   * 좋아요 수
   * @format int64
   */
  likeCount: number
  /**
   * 작성 날짜
   * @format date-time
   */
  createdAt: string
  /**
   * 수정 날짜
   * @format date-time
   */
  updatedAt: string
}

export interface ResponseDTOCursorMyCommunityPostResponseDtoType {
  /**
   * HttpStatusCode
   * @format int32
   * @example 200
   */
  statusCode?: number
  /**
   * 응답 메시지
   * @example "성공"
   */
  message?: string
  /** 데이터 */
  data?: CursorMyCommunityPostResponseDtoType
}

/**
 * 데이터
 */

export interface CursorMagazineListInfoType {
  /** cursor / 다음 요청의 cursor */
  cursor: string | null
  /** 다음 데이터 존재 여부 */
  hasNext: boolean
  data?: MagazineListInfoType[]
  /** @format int64 */
  totalElements?: number
}

export interface MagazineListInfoType {
  /** @format int64 */
  magazineId?: number
  title?: string
  subTitle?: string
  /** 메인 이미지 */
  thumbnail?: ImageInfoType
  /** @format date-time */
  createdAt?: string
}

export interface ResponseDTOCursorMagazineListInfoType {
  /**
   * HttpStatusCode
   * @format int32
   * @example 200
   */
  statusCode?: number
  /**
   * 응답 메시지
   * @example "성공"
   */
  message?: string
  /** 데이터 */
  data?: CursorMagazineListInfoType
}

/**
 * 데이터
 */

export interface MagazineDetailInfoType {
  /** @format int64 */
  magazineId: number
  title: string
  subTitle: string
  /** 메인 이미지 */
  thumbnail: ImageInfoType
  content: string
  /** @format int64 */
  viewCount: number
  externalProductUrl: string
}

export interface ResponseDTOMagazineDetailInfoType {
  /**
   * HttpStatusCode
   * @format int32
   * @example 200
   */
  statusCode?: number
  /**
   * 응답 메시지
   * @example "성공"
   */
  message?: string
  /** 데이터 */
  data?: MagazineDetailInfoType
}

export interface CommentInfoType {
  /** @format int64 */
  commentId: number
  /** @format int64 */
  userId: number
  nickname: string
  comment: string
  /** @format date-time */
  createdAt: string
  isMine: boolean
}

/**
 * 데이터
 */

export interface PageResponseDTOCommentInfoType {
  content?: CommentInfoType[]
  /** @format int32 */
  page?: number
  /** @format int32 */
  size?: number
  /** @format int64 */
  totalElements?: number
  /** @format int64 */
  totalPages?: number
}

export interface ResponseDTOPageResponseDTOCommentInfoType {
  /**
   * HttpStatusCode
   * @format int32
   * @example 200
   */
  statusCode?: number
  /**
   * 응답 메시지
   * @example "성공"
   */
  message?: string
  /** 데이터 */
  data?: PageResponseDTOCommentInfoType
}

/**
 * 데이터
 */

export interface CursorLoungeFeedDtoType {
  /** cursor / 다음 요청의 cursor */
  cursor: string | null
  /** 다음 데이터 존재 여부 */
  hasNext: boolean
  data?: LoungeFeedDtoType[]
  /** @format int64 */
  totalElements?: number
}

export interface LoungeFeedDtoType {
  /** 타입 */
  type: 'LOUNGE' | 'MAGAZINE_COMMENT' | 'POPUP_COMMENT'
  /**
   * 아이디
   * @format int64
   */
  id: number
  /** 닉네임 */
  nickname: string
  /** 메인 이미지 */
  thumbnail: ImageInfoType
  /** 콘텐츠 */
  content: string
  /**
   * 작성일시
   * @format date-time
   */
  createdAt: string
}

export interface ResponseDTOCursorLoungeFeedDtoType {
  /**
   * HttpStatusCode
   * @format int32
   * @example 200
   */
  statusCode?: number
  /**
   * 응답 메시지
   * @example "성공"
   */
  message?: string
  /** 데이터 */
  data?: CursorLoungeFeedDtoType
}

/**
 * 데이터
 */

export interface CursorMyInquiryResponseDtoType {
  /** cursor / 다음 요청의 cursor */
  cursor: string | null
  /** 다음 데이터 존재 여부 */
  hasNext: boolean
  data?: MyInquiryResponseDtoType[]
  /** @format int64 */
  totalElements?: number
}

export interface MyInquiryResponseDtoType {
  /**
   * 문의 아이디
   * @format int64
   */
  id: number
  /** 문의 타입 */
  type: MyInquiryResponseDtoTypeEnumType
  /**
   * 문의 날짜
   * @format date
   */
  inquiredAt: string
  /** 제목 */
  title: string
  /** 내용 */
  content: string
  /** 처리 상태 */
  status: MyInquiryResponseDtoStatusEnumType
  /** 답변 */
  reply?: string | null
}

export interface ResponseDTOCursorMyInquiryResponseDtoType {
  /**
   * HttpStatusCode
   * @format int32
   * @example 200
   */
  statusCode?: number
  /**
   * 응답 메시지
   * @example "성공"
   */
  message?: string
  /** 데이터 */
  data?: CursorMyInquiryResponseDtoType
}

export interface ResponseDTOListThisMonthPopupResponseType {
  /**
   * HttpStatusCode
   * @format int32
   * @example 200
   */
  statusCode?: number
  /**
   * 응답 메시지
   * @example "성공"
   */
  message?: string
  /** 데이터 */
  data?: ThisMonthPopupResponseType[]
}

/**
 * 데이터
 */

export interface ThisMonthPopupResponseType {
  /**
   * 팝업 아이디
   * @format int64
   */
  popupId: number
  /** 팝업명 */
  title: string
  /** 메인 이미지 */
  thumbnail: ImageInfoType
  /**
   * 시작 날짜
   * @format date
   */
  startDate: string
  /**
   * 종료 날짜
   * @format date
   */
  endDate: string
  /** 도시 */
  city: string
  /** 국가 */
  country: string
  /**
   * 카테고리 ID
   * @format int64
   */
  category: CategoryInfoType
  status: PopupResponseDtoStatusEnumType

  /**
   * 유저 찜 여부 / 비로그인 유저의 경우 false
   * @default false
   */
  isLike: boolean
}

/**
 * 데이터
 */

export interface PopupStoriesResponseType {
  /**
   * 매거진 아이디
   * @format int64
   */
  magazineId?: number
  /** 제목 색상 */
  titleHex?: string
  /** 제목 */
  title?: string
  /** 서브 타이틀 */
  subTitle?: string
  /** 콘텐츠 내용 */
  content?: string
  /** 메인 이미지 */
  thumbnail?: ImageInfoType
}

export interface ResponseDTOListPopupStoriesResponseType {
  /**
   * HttpStatusCode
   * @format int32
   * @example 200
   */
  statusCode?: number
  /**
   * 응답 메시지
   * @example "성공"
   */
  message?: string
  /** 데이터 */
  data?: PopupStoriesResponseType[]
}

/**
 * 팝업 리스트
 */

export interface MosLikedPopupDetailResponseType {
  /**
   * 팝업 아이디
   * @format int64
   */
  popupId: number
  /** 팝업명 */
  title: string
  /** 메인 이미지 */
  imageInfo: ImageInfoType
  /**
   * 시작 날짜
   * @format date
   */
  startDate: string
  /**
   * 종료 날짜
   * @format date
   */
  endDate: string
  /** 도시 */
  city: string
  /** 국가 */
  country: string
  /**
   * 유저 찜 여부 / 비로그인 유저의 경우 false
   * @default false
   */
  isLike: boolean
}

/**
 * 데이터
 */

export interface MostLikedPopupResponseType {
  /** 노출 여부 */
  isDisplay?: boolean
  /** 팝업 리스트 */
  list?: MosLikedPopupDetailResponseType[]
}

export interface ResponseDTOMostLikedPopupResponseType {
  /**
   * HttpStatusCode
   * @format int32
   * @example 200
   */
  statusCode?: number
  /**
   * 응답 메시지
   * @example "성공"
   */
  message?: string
  /** 데이터 */
  data?: MostLikedPopupResponseType
}

/**
 * 데이터
 */

export interface GetCommunityPostResponseDtoType {
  /**
   * 게시글 아이디
   * @format int64
   */
  postId: number
  /**
   * 작성자 아이디
   * @format int64
   */
  userId: number
  /** 작성자 닉네임 */
  nickname: string
  /** 글 내용 */
  content: string
  /** 이미지 */
  images?: ImageInfoType[]
  /**
   * 유저의 좋아요 여부 / 비로그인 유저인 경우 false
   * @default false
   */
  isLike: boolean
  /**
   * 좋아요 수
   * @format int64
   */
  likeCount: number
  /**
   * 조회수
   * @format int64
   */
  viewCount: number
  /**
   * 작성 날짜
   * @format date-time
   */
  createdAt: string
  /**
   * 수정 날짜
   * @format date-time
   */
  updatedAt: string
}

export interface ResponseDTOGetCommunityPostResponseDtoType {
  /**
   * HttpStatusCode
   * @format int32
   * @example 200
   */
  statusCode?: number
  /**
   * 응답 메시지
   * @example "성공"
   */
  message?: string
  /** 데이터 */
  data?: GetCommunityPostResponseDtoType
}

export interface GetPostCommentsResponseDtoType {
  /**
   * 댓글 아이디
   * @format int64
   */
  commentId: number
  /**
   * 유저 아이디
   * @format int64
   */
  userId: number
  /** 닉네임 */
  nickname: string
  /** 댓글 내용 */
  comment: string
  /**
   * 작성일자
   * @format date-time
   */
  createdAt: string
  /** 본인 작성 여부 */
  isMine: boolean
}

/**
 * 데이터
 */

export interface PageResponseDTOGetPostCommentsResponseDtoType {
  content?: GetPostCommentsResponseDtoType[]
  /** @format int32 */
  page?: number
  /** @format int32 */
  size?: number
  /** @format int64 */
  totalElements?: number
  /** @format int64 */
  totalPages?: number
}

export interface ResponseDTOPageResponseDTOGetPostCommentsResponseDtoType {
  /**
   * HttpStatusCode
   * @format int32
   * @example 200
   */
  statusCode?: number
  /**
   * 응답 메시지
   * @example "성공"
   */
  message?: string
  /** 데이터 */
  data?: PageResponseDTOGetPostCommentsResponseDtoType
}

export interface ResponseDTOListCategoryInfoType {
  /**
   * HttpStatusCode
   * @format int32
   * @example 200
   */
  statusCode?: number
  /**
   * 응답 메시지
   * @example "성공"
   */
  message?: string
  /** 데이터 */
  data?: CategoryInfoType[]
}

export interface DeleteUserRequestType {
  reason?: string
}

export type SnsInfoPlatformEnumType =
  | 'INSTAGRAM'
  | 'TWITTER'
  | 'FACEBOOK'
  | 'LINKEDIN'
  | 'OTHERS' // X-enumName Values Missing

export type UpdateMyPageUserInfoRequestGenderEnumType =
  | 'MALE'
  | 'FEMALE'
  | 'NONE' // X-enumName Values Missing

/**
 * Null 인 경우 로컬 유저
 */

export type MyPageUserInfoProviderEnumType = 'GOOGLE' | 'APPLE' // X-enumName Values Missing

export type MyPageUserInfoGenderEnumType = 'MALE' | 'FEMALE' | 'NONE' // X-enumName Values Missing

export type VerifyEmailConfirmRequestPurposeEnumType =
  | 'EMAIL_VALIDATION'
  | 'RESET_PASSWORD' // X-enumName Values Missing

export type RegisterAdditionalInfoGenderEnumType = 'MALE' | 'FEMALE' | 'NONE' // X-enumName Values Missing

export type OauthRegisterAdditionalInfoGenderEnumType =
  | 'MALE'
  | 'FEMALE'
  | 'NONE' // X-enumName Values Missing

/**
 * 파일 타입
 * @example IMAGE
 */

export type PresignedRequestDtoFileTypeEnumType =
  | 'IMAGE'
  | 'AUDIO'
  | 'TEXT'
  | 'VIDEO'
  | 'APPLICATION' // X-enumName Values Missing

/**
 * 파일 경로
 * @example USER_THUMBNAIL
 */

export type PresignedRequestDtoFieldChoicesEnumType =
  | 'USER'
  | 'POST'
  | 'MAGAZINE'
  | 'PLACE'
  | 'POPUP'
  | 'EDITOR' // X-enumName Values Missing

/**
 * 문의 유형
 */

export type AddInquiryRequestDtoTypeEnumType =
  | 'POPUP'
  | 'EVENT_PLACE'
  | 'SITE_USAGE'
  | 'ERROR_REPORT'
  | 'OTHER' // X-enumName Values Missing

export type CategoryInfoColorEnumType = 'RED' | 'BLUE' | 'LIME' | 'GRAY' // X-enumName Values Missing

/**
 * 문의 타입
 */

export type MyInquiryResponseDtoTypeEnumType =
  | 'POPUP'
  | 'EVENT_PLACE'
  | 'SITE_USAGE'
  | 'ERROR_REPORT'
  | 'OTHER' // X-enumName Values Missing

/**
 * 처리 상태
 */

export type MyInquiryResponseDtoStatusEnumType = 'PENDING' | 'ANSWERED' // X-enumName Values Missing

export type GetPopupListParamsOrderEnumType = 'RECENTLY' | 'MOST_LIKE' // X-enumName Values Missing

export type PopupResponseDtoStatusEnumType =
  | 'IN_PROGRESS'
  | 'ENDED'
  | 'UPCOMING' // X-enumName Values Missing

export type GetPopupResponseDtoStatusEnumType =
  | 'IN_PROGRESS'
  | 'ENDED'
  | 'UPCOMING' // X-enumName Values Missing

/**
 * 타입
 */

export type LoungeFeedDtoTypeEnumType =
  | 'MAGAZINE_COMMENT'
  | 'POPUP_COMMENT'
  | 'LOUNGE' // X-enumName Values Missing

/**
 * 문의 타입
 */

export type GetPopupListParamsStatusEnumType =
  | 'IN_PROGRESS'
  | 'ENDED'
  | 'UPCOMING' // X-enumName Values Missing

export type GetAllLoungeFeedParamsFilterEnumType =
  | 'ALL'
  | 'LOUNGE'
  | 'POPUPS'
  | 'JOURNAL' // X-enumName Values Missing

export const LoungeFeedDtoTypeEnum = {
  MAGAZINE_COMMENT: 'MAGAZINE_COMMENT',
  POPUP_COMMENT: 'POPUP_COMMENT',
  LOUNGE: 'LOUNGE',
} as const

export const GetAllLoungeFeedParamsFilterEnum = {
  ALL: 'ALL',
  LOUNGE: 'LOUNGE',
  POPUPS: 'POPUPS',
  JOURNAL: 'JOURNAL',
} as const

export interface ResponseDTOListPopupResponseDtoType {
  /**
   * HttpStatusCode
   * @format int32
   * @example 200
   */
  statusCode?: number
  /**
   * 응답 메시지
   * @example "성공"
   */
  message?: string
  /** 데이터 */
  data?: PopupResponseDtoType[]
}

/**
 * 데이터
 */
