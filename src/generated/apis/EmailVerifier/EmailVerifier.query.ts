/**
 * !DO NOT EDIT THIS FILE
 *
 * 스크립트가 실행될때, 파일을 항상 새로 쓰기 때문에 파일 수정시 작성내용이 제거 될 수 있습니다.
 */
/**
 * tok-cli.config.ts 에서 설정된 instance 경로의 axios instace 가 적용된, api 의 instance 입니다.
 */
import { useMutation } from '@tanstack/react-query'

import { fetchExtended } from '@/configs/fetch/fetch-extend'

import { ErrorResponseDTOCommonType } from '../@types/data-contracts'
import { MutationHookParams } from '../@types/react-query-type'
import { EmailVerifierApi } from './EmailVerifier.api'

export const emailVerifierApi = new EmailVerifierApi({
  customFetch: fetchExtended,
})

/**
 * query key 에 undefined 를 포함시키지 않기 위한 함수입니다.
 */
const isDefined = (v: unknown) => typeof v !== 'undefined'

/**
 * query-keys
 */

export const QUERY_KEY_EMAIL_VERIFIER_API = {
  VERIFY_EMAIL: () => ['VERIFY_EMAIL'],
  SEND_EMAIL_FOR_PASSWORD_RESET: () => ['SEND_EMAIL_FOR_PASSWORD_RESET'],
  VERIFY_EMAIL_CONFIRM: () => ['VERIFY_EMAIL_CONFIRM'],
}

/**
 * No description
 *
 * @tags [Email Verifier]
 * @name VerifyEmail
 * @summary 이메일 검증 및 인증 번호 메일 전송
 * @request POST:/v1/verifier/email
 * @secure  */

export const useVerifyEmailMutation = (
  params: MutationHookParams<
    typeof emailVerifierApi.verifyEmail,
    {
      error:
        | void
        | {
            /** @example "UNAUTHORIZED_ACCESS" */
            errorCode?: string
            /** @example "인증이 필요한 접근입니다" */
            description?: string
          }
        | {
            /** @example "ACCESS_DENIED" */
            errorCode?: string
            /** @example "접근이 거부되었습니다" */
            description?: string
          }
    }
  >,
) => {
  const mutationKey = QUERY_KEY_EMAIL_VERIFIER_API.VERIFY_EMAIL()
  return useMutation({
    mutationKey,
    mutationFn: emailVerifierApi.verifyEmail,
    ...params?.options,
  })
}

/**
 * No description
 *
 * @tags [Email Verifier]
 * @name SendEmailForPasswordReset
 * @summary 비밀번호 찾기 이메일 인증 메일 전송
 * @request POST:/v1/verifier/email/password-reset
 * @secure  */

export const useSendEmailForPasswordResetMutation = (
  params: MutationHookParams<
    typeof emailVerifierApi.sendEmailForPasswordReset,
    {
      error:
        | ErrorResponseDTOCommonType
        | {
            /** @example "UNAUTHORIZED_ACCESS" */
            errorCode?: string
            /** @example "인증이 필요한 접근입니다" */
            description?: string
          }
        | {
            /** @example "ACCESS_DENIED" */
            errorCode?: string
            /** @example "접근이 거부되었습니다" */
            description?: string
          }
    }
  >,
) => {
  const mutationKey =
    QUERY_KEY_EMAIL_VERIFIER_API.SEND_EMAIL_FOR_PASSWORD_RESET()
  return useMutation({
    mutationKey,
    mutationFn: emailVerifierApi.sendEmailForPasswordReset,
    ...params?.options,
  })
}

/**
 * No description
 *
 * @tags [Email Verifier]
 * @name VerifyEmailConfirm
 * @summary 이메일 인증 확인
 * @request POST:/v1/verifier/email/confirm
 * @secure  */

export const useVerifyEmailConfirmMutation = (
  params: MutationHookParams<
    typeof emailVerifierApi.verifyEmailConfirm,
    {
      error:
        | void
        | {
            /** @example "UNAUTHORIZED_ACCESS" */
            errorCode?: string
            /** @example "인증이 필요한 접근입니다" */
            description?: string
          }
        | {
            /** @example "ACCESS_DENIED" */
            errorCode?: string
            /** @example "접근이 거부되었습니다" */
            description?: string
          }
    }
  >,
) => {
  const mutationKey = QUERY_KEY_EMAIL_VERIFIER_API.VERIFY_EMAIL_CONFIRM()
  return useMutation({
    mutationKey,
    mutationFn: emailVerifierApi.verifyEmailConfirm,
    ...params?.options,
  })
}

/**
 * !DO NOT EDIT THIS FILE
 *
 * 스크립트가 실행될때, 파일을 항상 새로 쓰기 때문에 파일 수정시 작성내용이 제거 될 수 있습니다.
 */

/**
 * !DO NOT EDIT THIS FILE
 *
 * 스크립트가 실행될때, 파일을 항상 새로 쓰기 때문에 파일 수정시 작성내용이 제거 될 수 있습니다.
 */

/**
 * tok-cli.config.ts 에서 설정된 instance 경로의 axios instace 가 적용된, api 의 instance 입니다.
 */
