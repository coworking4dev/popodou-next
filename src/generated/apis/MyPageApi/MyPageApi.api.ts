import { ContentType, HttpClient, RequestParams } from '../@http-client'
import {
  ErrorResponseDTOCommonType,
  ResponseDTOCursorMyCommunityPostResponseDtoType,
  ResponseDTOCursorMyPopupLikeResponseDtoType,
  ResponseDTOMyPageUserInfoType,
  UpdateMyPageUserInfoRequestType,
} from '../@types/data-contracts'
import { DeepOmitReadOnly } from '../@types/util-types'

/**
 * !DO NOT EDIT THIS FILE
 *
 * 스크립트가 실행될때, 파일을 항상 새로 쓰기 때문에 파일 수정시 작성내용이 제거 될 수 있습니다.
 */

export class MyPageApiApi<
  SecurityDataType = unknown,
> extends HttpClient<SecurityDataType> {
  /**
   * No description
   *
   * @tags [MyPage API]
   * @name GetMyPageProfile
   * @summary 마이페이지 > Profile 조회
   * @request GET:/v1/my/profile
   * @secure
   */

  getMyPageProfile = (variables?: { params?: RequestParams }) =>
    this.request<
      ResponseDTOMyPageUserInfoType,
      | ErrorResponseDTOCommonType
      | {
          /** @example "UNAUTHORIZED_ACCESS" */
          errorCode?: string
          /** @example "인증이 필요한 접근입니다" */
          description?: string
        }
      | {
          /** @example "ACCESS_DENIED" */
          errorCode?: string
          /** @example "접근이 거부되었습니다" */
          description?: string
        }
    >({
      path: `/v1/my/profile`,
      method: 'GET',
      secure: true,
      ...variables?.params,
    }) /**
   * @description ## 마이페이지 > Profile 수정 - Response 에는 수정 적용 후 getMyPageProfile 데이터를 반환합니다. - 주소 필드 모두 미입력 시 addresInfo == null - Sns 필드 플랫폼 미선택 시 snsInfo == null
   *
   * @tags [MyPage API]
   * @name UpdateMyPageProfile
   * @summary 마이페이지 > Profile 수정
   * @request PUT:/v1/my/profile
   * @secure
   */

  updateMyPageProfile = (variables: {
    data: DeepOmitReadOnly<UpdateMyPageUserInfoRequestType>
    params?: RequestParams
  }) =>
    this.request<
      ResponseDTOMyPageUserInfoType,
      | ErrorResponseDTOCommonType
      | {
          /** @example "UNAUTHORIZED_ACCESS" */
          errorCode?: string
          /** @example "인증이 필요한 접근입니다" */
          description?: string
        }
      | {
          /** @example "ACCESS_DENIED" */
          errorCode?: string
          /** @example "접근이 거부되었습니다" */
          description?: string
        }
    >({
      path: `/v1/my/profile`,
      method: 'PUT',
      body: variables.data,
      secure: true,
      type: ContentType.Json,
      ...variables.params,
    }) /**
   * @description ## 마이페이지 > 찜한 팝업 내역 - 좋아요 최신순으로 정렬 ### cursor - null 인 경우, 가장 최신순으로 조회 - responseBody에서 nextCursor 를 확인하여 다음 조회 시 사용 (null 이면 더 이상 데이터 없다는 의미)
   *
   * @tags [MyPage API]
   * @name GetMyPopupLikes
   * @summary 마이페이지 > 찜한 팝업 내역
   * @request GET:/v1/my/popup-like
   * @secure
   */

  getMyPopupLikes = (variables?: {
    query?: {
      cursor?: string
      /**
       * @format int32
       * @default 10
       */
      pageSize?: number
    }
    params?: RequestParams
  }) =>
    this.request<
      ResponseDTOCursorMyPopupLikeResponseDtoType,
      | ErrorResponseDTOCommonType
      | {
          /** @example "UNAUTHORIZED_ACCESS" */
          errorCode?: string
          /** @example "인증이 필요한 접근입니다" */
          description?: string
        }
      | {
          /** @example "ACCESS_DENIED" */
          errorCode?: string
          /** @example "접근이 거부되었습니다" */
          description?: string
        }
    >({
      path: `/v1/my/popup-like`,
      method: 'GET',
      query: variables?.query,
      secure: true,
      ...variables?.params,
    }) /**
   * @description ## 마이페이지 > Lounge 자유 게시글 작성 내역 - 작성 최신순
   *
   * @tags [MyPage API]
   * @name GetMyCommunityPosts
   * @summary 마이페이지 > Lounge 자유 게시글 작성 내역
   * @request GET:/v1/my/community-post
   * @secure
   */

  getMyCommunityPosts = (variables?: {
    query?: {
      cursor?: string
      /**
       * @format int32
       * @default 10
       */
      pageSize?: number
    }
    params?: RequestParams
  }) =>
    this.request<
      ResponseDTOCursorMyCommunityPostResponseDtoType,
      | ErrorResponseDTOCommonType
      | {
          /** @example "UNAUTHORIZED_ACCESS" */
          errorCode?: string
          /** @example "인증이 필요한 접근입니다" */
          description?: string
        }
      | {
          /** @example "ACCESS_DENIED" */
          errorCode?: string
          /** @example "접근이 거부되었습니다" */
          description?: string
        }
    >({
      path: `/v1/my/community-post`,
      method: 'GET',
      query: variables?.query,
      secure: true,
      ...variables?.params,
    })
}

//
