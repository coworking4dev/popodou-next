import { ContentType, HttpClient, RequestParams } from '../@http-client'
import {
  ErrorResponseDTOCommonType,
  ResponseDTOVerifyEmailConfirmResponseType,
  ResponseDTOVerifyEmailResponseType,
  ResponseDTOVoidType,
  VerifyEmailConfirmRequestType,
  VerifyEmailRequestType,
} from '../@types/data-contracts'
import { DeepOmitReadOnly } from '../@types/util-types'

/**
 * !DO NOT EDIT THIS FILE
 *
 * 스크립트가 실행될때, 파일을 항상 새로 쓰기 때문에 파일 수정시 작성내용이 제거 될 수 있습니다.
 */

export class EmailVerifierApi<
  SecurityDataType = unknown,
> extends HttpClient<SecurityDataType> {
  /**
   * No description
   *
   * @tags [Email Verifier]
   * @name VerifyEmail
   * @summary 이메일 검증 및 인증 번호 메일 전송
   * @request POST:/v1/verifier/email
   * @secure
   */

  verifyEmail = (variables: {
    data: DeepOmitReadOnly<VerifyEmailRequestType>
    params?: RequestParams
  }) =>
    this.request<
      ResponseDTOVerifyEmailResponseType,
      | void
      | {
          /** @example "UNAUTHORIZED_ACCESS" */
          errorCode?: string
          /** @example "인증이 필요한 접근입니다" */
          description?: string
        }
      | {
          /** @example "ACCESS_DENIED" */
          errorCode?: string
          /** @example "접근이 거부되었습니다" */
          description?: string
        }
    >({
      path: `/v1/verifier/email`,
      method: 'POST',
      body: variables.data,
      secure: true,
      type: ContentType.Json,
      ...variables.params,
    }) /**
   * No description
   *
   * @tags [Email Verifier]
   * @name SendEmailForPasswordReset
   * @summary 비밀번호 찾기 이메일 인증 메일 전송
   * @request POST:/v1/verifier/email/password-reset
   * @secure
   */

  sendEmailForPasswordReset = (variables: {
    data: DeepOmitReadOnly<VerifyEmailRequestType>
    params?: RequestParams
  }) =>
    this.request<
      ResponseDTOVoidType,
      | ErrorResponseDTOCommonType
      | {
          /** @example "UNAUTHORIZED_ACCESS" */
          errorCode?: string
          /** @example "인증이 필요한 접근입니다" */
          description?: string
        }
      | {
          /** @example "ACCESS_DENIED" */
          errorCode?: string
          /** @example "접근이 거부되었습니다" */
          description?: string
        }
    >({
      path: `/v1/verifier/email/password-reset`,
      method: 'POST',
      body: variables.data,
      secure: true,
      type: ContentType.Json,
      ...variables.params,
    }) /**
   * No description
   *
   * @tags [Email Verifier]
   * @name VerifyEmailConfirm
   * @summary 이메일 인증 확인
   * @request POST:/v1/verifier/email/confirm
   * @secure
   */

  verifyEmailConfirm = (variables: {
    data: DeepOmitReadOnly<VerifyEmailConfirmRequestType>
    params?: RequestParams
  }) =>
    this.request<
      ResponseDTOVerifyEmailConfirmResponseType,
      | void
      | {
          /** @example "UNAUTHORIZED_ACCESS" */
          errorCode?: string
          /** @example "인증이 필요한 접근입니다" */
          description?: string
        }
      | {
          /** @example "ACCESS_DENIED" */
          errorCode?: string
          /** @example "접근이 거부되었습니다" */
          description?: string
        }
    >({
      path: `/v1/verifier/email/confirm`,
      method: 'POST',
      body: variables.data,
      secure: true,
      type: ContentType.Json,
      ...variables.params,
    })
}

//
